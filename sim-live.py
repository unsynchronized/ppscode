#!/usr/bin/env python

import sys
import time
import os
import serial

def doescape(data):
    return "".join(["%02x" % x for x in data])

def serreadany(ser):
    outdata = b''
    while True:
        data = ser.read(1)
        if len(data) == 0:
            return outdata
        outdata = outdata + data


def serread(ser, nbytes):
    outdata = b''
    while nbytes > 0:
        data = ser.read(1)
        if data:
            outdata = outdata + data
            nbytes = nbytes - 1
    return outdata


if __name__ == '__main__':
    devname = sys.argv[1]
    if len(sys.argv) > 2:
        secswait = float(sys.argv[2])
    else:
        secswait = 10

    sys.stderr.write("opening device: " + devname + "\n")
    ser = serial.Serial()
    ser.port = devname
    ser.baudrate = 9600
    ser.parity = serial.PARITY_NONE
    ser.bytesize = serial.EIGHTBITS
    ser.rtscts = False
    ser.xonxoff = False
    ser.timeout = secswait 
    ser.open()
    sys.stderr.write("open\n")
    d = ser.read(1)
    if len(d) == 0:
        print("no initial 0x00")
        sys.exit(1)
    ser.write(d)
    if d[0] == 0:
        sys.stderr.write("RESPONDING")
        ser.write(b'\xbb\xd1\x41\x55\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x43\x5a\x42\x34\x55\x58\x58\x41\x35\x35\xc1')

    ser.timeout = 0.100
    while True:
        lastts = int(round(time.time() * 1000))
#        print("---")
#        d = serreadany(ser)
        d = ser.read(1)
        if len(d) == 0:
            break
        curts = int(round(time.time() * 1000))
        print(f'{curts} {curts-lastts}: {doescape(d)}')
    ser.write(b'\x01\x00\x01\x00\x01\x00\xa1\x9b\x3f\x61\x20\x02\x00\x00\x9c\x3f\x0e\xa6\x08\xb7\x0f\xc6\x01\x05\xb7\x50\xc6\x10\x00\xa1\x98\x26\x0a\x14\x50\xa6\x84\xb7\x09\xa6\x80\xb7\x08\xcd\x01\xb2\x3f\x51\x00\x50\x02\x20\x18\x1e\x07\xbe\x51\xd6\x02\x00\x97\xb6\x51\xbd\x26\xb6\x51\x4c\xb7\x51\xc1\x01\x06\x26\xea\x3f\x51\x1e\x07\xbe\x51\xa6\x52\xbd\x20\xbe\x51\xb6\x52\xd7\x02\x00\x5c\xbf\x51\xc3\x01\x06\x26\xe9\x5f\xbf\x51\xb6\x11\xbe\x51\x1e\x07\x0f\x10\xfd\xd6\x02\x00\xb7\x11\x5c\xbf\x51\xc3\x01\x06\x26\xec\x0d\x10\xfd\xae\x08\xa6\x38\xbd\x26\xc6\x3f\xfe\xc7\x01\x8c\xc6\x3f\xff\xc7\x01\x8d\xcc\x3f\xfe\x00\x00\x64\x6f\x7b\x57\x8c\x6b\x3f\x00\x00\x00\x7a\x68\x6f\x3f\x68\x7b\xeb\xeb\x8c\x6b\x3f\x00\x01\x02\x03\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\xae\x0b\xd6\x01\xa6\xb7\x09\x00\x50\x05\xd6\x01\x8e\x20\x03\xd6\x01\x9a\xb7\x08\x5a\x2a\xeb\x81\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x4c\x8d\x11\x00\x0f\x3a\x02\x60\x78\x42\xe8\x80\x00\x00\x02\x04\x04\x46\x46\x80\x17\x0d\x04\x08\xfc\xf8\xf8\x18\x05\x00\x91\x91\x93\x93\x00\x00\xc0\x65\x48\x9c\x6a\x00\x00\x00\x00\xf2\x80\x80\x02\x00\x00\x00\x00\xff\x38\x2c\x08\x41\x55\x32\x36\x49\x56\x39\x32\x36\x46\x33\x32\x36\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x35\x35\x41\x58\x58\x55\x34\x42\x5a\x43\x93\x17\x37\x50\x17\xcc\x08\xa7\x02\x14\x02\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

    ser.timeout = secswait 
    while True:
        lastts = int(round(time.time() * 1000))
#        print("---")
#        d = serreadany(ser)
        d = ser.read(1)
        if len(d) == 0:
            break
        curts = int(round(time.time() * 1000))
        print(f'{curts} {curts-lastts}: {doescape(d)}')

